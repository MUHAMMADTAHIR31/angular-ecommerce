{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductListComponent = class ProductListComponent {\n  constructor(productService, route) {\n    this.productService = productService;\n    this.route = route;\n    this.products = [];\n    this.currentCategoryId = 1;\n    this.previousCategoryId = 1;\n    this.searchMode = false; // ne properties for pagination\n\n    this.thePageNumber = 1;\n    this.thePageSize = 7;\n    this.theTotalElements = 0;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(() => {\n      this.listProducts();\n    });\n  }\n\n  listProducts() {\n    this.searchMode = this.route.snapshot.paramMap.has('keyword');\n\n    if (this.searchMode) {\n      this.handleSearchProducts();\n    } else {\n      this.handleListProducts();\n    }\n  }\n\n  handleSearchProducts() {\n    const theKeyword = this.route.snapshot.paramMap.get('keyword'); // now search for the products using keyword\n\n    this.productService.searchProducts(theKeyword).subscribe(data => {\n      this.products = data;\n    });\n  }\n\n  handleListProducts() {\n    // check if \"id\" parameter is available\n    const hasCategoryId = this.route.snapshot.paramMap.has('id');\n\n    if (hasCategoryId) {\n      // get the \"id\" param string. convert string to a number using the \"+\" symbol\n      this.currentCategoryId = +this.route.snapshot.paramMap.get('id');\n    } else {\n      // not category id available ... default to category id 1\n      this.currentCategoryId = 1;\n    } //\n    // Check if we have a different caterory id than previous\n    // Note: Angular will reuse a component if it is currently being viewed\n    //\n    //if we have a different caterory id than previous\n    //then set thePageNumber back to 1\n\n\n    if (this.previousCategoryId !== this.currentCategoryId) {\n      this.thePageNumber = 1;\n    }\n\n    this.previousCategoryId = this.currentCategoryId; // now get the products for the given category id\n\n    this.productService.getProductListPaginate(this.thePageNumber - 1, this.thePageSize, this.currentCategoryId).subscribe(this.processResult());\n  }\n\n  processResult() {\n    return data => {\n      this.products = data._embedded.products;\n      this.thePageNumber = data.page.number + 1;\n      this.thePageSize = data.page.size;\n      this.theTotalElements = data.page.totalElements;\n    };\n  }\n\n};\nProductListComponent = __decorate([Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list-grid.component.html',\n  styleUrls: ['./product-list.component.css']\n})], ProductListComponent);\nexport { ProductListComponent };","map":null,"metadata":{},"sourceType":"module"}